{"ast":null,"code":"var _jsxFileName = \"/Users/leduy/NodeJS_Learning/usingHooks/my-app/src/Content.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabs = ['Posts', 'Comments', 'Albums'];\nfunction Content() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [type, setType] = useState('post');\n  //1. useEffect(callback)\n  // - Gọi callback mỗi khi component re-render\n\n  //2. useEffect(callback, [])\n  // - Chỉ gọi callback 1 lần sau khi component mounted\n\n  //3. useEffect(callback, [dependencies]\n  // - Callback sẽ được gọi lại mỗi khi dependencies thay đổi.\n\n  //---------------------------------Lí thuyết chung của 3 thằng trên-------------------------------//\n  // 1. Callback luôn được gọi sau khi component mounted\n  // \n  //\n  //\n  //---------------------------------Lí thuyết chung của 3 thằng trên-------------------------------//\n\n  useEffect(() => {\n    document.title = title;\n  });\n  useEffect(() => {\n    console.log('type changed');\n    fetch(`https://jsonplaceholder.typicode.com/${type}`).then(response => response.json()).then(posts => {\n      setPosts(posts);\n    });\n  }, [type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tabs.map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n      style: type === tab ? {\n        color: '#fff',\n        backgroundColor: '#333'\n      } : {},\n      onClick: () => setType(tab),\n      children: tab\n    }, tab, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.title || post.name\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), console.log('Rendered component')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Content, \"6XUx3yEpPmRFfuGRRocvg6bXqY0=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["useEffect","useState","tabs","Content","title","setTitle","posts","setPosts","type","setType","document","console","log","fetch","then","response","json","map","tab","color","backgroundColor","e","target","value","post","name","id"],"sources":["/Users/leduy/NodeJS_Learning/usingHooks/my-app/src/Content.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nconst tabs = [ 'Posts' , 'Comments' , 'Albums']\n\nfunction Content(){\n    const [title, setTitle] = useState('')\n    const [posts, setPosts] = useState([])\n    const [type, setType] = useState('post')\n    //1. useEffect(callback)\n        // - Gọi callback mỗi khi component re-render\n\n    //2. useEffect(callback, [])\n        // - Chỉ gọi callback 1 lần sau khi component mounted\n\n    //3. useEffect(callback, [dependencies]\n        // - Callback sẽ được gọi lại mỗi khi dependencies thay đổi.\n\n//---------------------------------Lí thuyết chung của 3 thằng trên-------------------------------//\n// 1. Callback luôn được gọi sau khi component mounted\n// \n//\n//\n//---------------------------------Lí thuyết chung của 3 thằng trên-------------------------------//\n\n\n\n\n    useEffect(()=>{\n        document.title = title\n    })\n    useEffect(()=>{\n        console.log('type changed');\n        fetch(`https://jsonplaceholder.typicode.com/${type}`)\n            .then(response => response.json())\n            .then(posts => {\n                setPosts(posts)\n            })\n    }, [type])\n\n    return(\n        <div>\n            {tabs.map(tab => (\n                <button \n                    key = {tab}\n                    style = {type === tab ? { color: '#fff', backgroundColor: '#333'} : {}}\n                    onClick ={ () => setType(tab)}\n                >\n                {tab}\n                </button>\n            ))}\n\n            <input\n                value={title}\n                onChange = {e => setTitle(e.target.value)}\n            />\n            <ul>\n                {posts.map(post => (\n                        <li key = {post.id} >\n                            {post.title || post.name}\n                        </li>\n                ))}\n            </ul>\n            {console.log('Rendered component')}\n        </div>\n    )\n}\n\n\nexport default Content"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAE3C,MAAMC,IAAI,GAAG,CAAE,OAAO,EAAG,UAAU,EAAG,QAAQ,CAAC;AAE/C,SAASC,OAAO,GAAE;EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EACxC;EACI;;EAEJ;EACI;;EAEJ;EACI;;EAER;EACA;EACA;EACA;EACA;EACA;;EAKID,SAAS,CAAC,MAAI;IACVU,QAAQ,CAACN,KAAK,GAAGA,KAAK;EAC1B,CAAC,CAAC;EACFJ,SAAS,CAAC,MAAI;IACVW,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BC,KAAK,CAAE,wCAAuCL,IAAK,EAAC,CAAC,CAChDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACR,KAAK,IAAI;MACXC,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,CAAC;EACV,CAAC,EAAE,CAACE,IAAI,CAAC,CAAC;EAEV,oBACI;IAAA,WACKN,IAAI,CAACe,GAAG,CAACC,GAAG,iBACT;MAEI,KAAK,EAAIV,IAAI,KAAKU,GAAG,GAAG;QAAEC,KAAK,EAAE,MAAM;QAAEC,eAAe,EAAE;MAAM,CAAC,GAAG,CAAC,CAAE;MACvE,OAAO,EAAI,MAAMX,OAAO,CAACS,GAAG,CAAE;MAAA,UAEjCA;IAAG,GAJOA,GAAG;MAAA;MAAA;MAAA;IAAA,QAMjB,CAAC,eAEF;MACI,KAAK,EAAEd,KAAM;MACb,QAAQ,EAAIiB,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC5C,eACF;MAAA,UACKjB,KAAK,CAACW,GAAG,CAACO,IAAI,iBACP;QAAA,UACKA,IAAI,CAACpB,KAAK,IAAIoB,IAAI,CAACC;MAAI,GADjBD,IAAI,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QAGzB;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,EACJf,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEd;AAAC,GA7DQT,OAAO;AAAA,KAAPA,OAAO;AAgEhB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}